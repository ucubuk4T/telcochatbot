{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar invalidProps = function invalidProps(_ref) {\n  var invalid = _ref.invalid,\n      errorId = _ref.errorId;\n  return {\n    'data-invalid': invalid,\n    'aria-invalid': invalid,\n    'aria-describedby': errorId\n  };\n};\n\nexport var textInputProps = function textInputProps(_ref2) {\n  var invalid = _ref2.invalid,\n      sharedTextInputProps = _ref2.sharedTextInputProps,\n      errorId = _ref2.errorId;\n  return _objectSpread({}, sharedTextInputProps, invalid ? invalidProps({\n    invalid: invalid,\n    errorId: errorId\n  }) : {});\n};","map":null,"metadata":{},"sourceType":"module"}