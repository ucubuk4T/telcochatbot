{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { ButtonTypes } from '../../prop-types/types';\nimport warning from 'warning';\nvar prefix = settings.prefix;\nvar didWarnAboutDeprecation = false;\nvar Button = React.forwardRef(function Button(_ref, ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      as = _ref.as,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      small = _ref.small,\n      size = _ref.size,\n      kind = _ref.kind,\n      href = _ref.href,\n      tabIndex = _ref.tabIndex,\n      type = _ref.type,\n      ButtonImageElement = _ref.renderIcon,\n      iconDescription = _ref.iconDescription,\n      other = _objectWithoutProperties(_ref, [\"children\", \"as\", \"className\", \"disabled\", \"small\", \"size\", \"kind\", \"href\", \"tabIndex\", \"type\", \"renderIcon\", \"iconDescription\"]);\n\n  var buttonClasses = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--btn\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--field\"), size === 'field'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--sm\"), size === 'small' || small), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--primary\"), kind === 'primary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--danger\"), kind === 'danger'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--secondary\"), kind === 'secondary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--ghost\"), kind === 'ghost'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--danger--primary\"), kind === 'danger--primary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--tertiary\"), kind === 'tertiary'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--disabled\"), disabled), _classNames));\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (small && !didWarnAboutDeprecation) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"\\nThe prop `small` for Button has been deprecated in favor of `size`. Please use `type=\\\"small\\\"` instead.\") : void 0;\n      didWarnAboutDeprecation = true;\n    }\n  }\n\n  var commonProps = {\n    tabIndex: tabIndex,\n    className: buttonClasses,\n    ref: ref\n  };\n  var buttonImage = !ButtonImageElement ? null : React.createElement(ButtonImageElement, {\n    \"aria-label\": iconDescription,\n    className: \"\".concat(prefix, \"--btn__icon\"),\n    \"aria-hidden\": true\n  });\n  var component = 'button';\n  var otherProps = {\n    disabled: disabled,\n    type: type\n  };\n  var anchorProps = {\n    role: 'button',\n    href: href\n  };\n\n  if (as) {\n    component = as;\n    otherProps = _objectSpread({}, otherProps, anchorProps);\n  } else if (href) {\n    component = 'a';\n    otherProps = anchorProps;\n  }\n\n  return React.createElement(component, _objectSpread({}, other, commonProps, otherProps), children, buttonImage);\n});\nButton.propTypes = {\n  /**\n   * Specify the content of your Button\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify how the button itself should be rendered.\n   * Make sure to apply all props to the root node and render children appropriately\n   */\n  as: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n  /**\n   * Specify an optional className to be added to your Button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the Button should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify the size of the button, from a list of available sizes.\n   * For `default` buttons, this prop can remain unspecified.\n   */\n  size: PropTypes.oneOf(['default', 'field', 'small']),\n\n  /**\n   * Deprecated in v10 in favor of `size`.\n   * Specify whether the Button should be a small variant\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Specify the kind of Button you want to create\n   */\n  kind: ButtonTypes.buttonKind.isRequired,\n\n  /**\n   * Optionally specify an href for your Button to become an <a> element\n   */\n  href: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the Button\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.oneOf(['button', 'reset', 'submit']),\n\n  /**\n   * Optional prop to specify the role of the Button\n   */\n  role: PropTypes.string,\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If specifying the `icon` prop, provide a description for that icon that can\n   * be read by screen readers\n   */\n  iconDescription: function iconDescription(props) {\n    if (props.renderIcon && !props.children && !props.iconDescription) {\n      return new Error('renderIcon property specified without also providing an iconDescription property.');\n    }\n\n    return undefined;\n  }\n};\nButton.defaultProps = {\n  tabIndex: 0,\n  type: 'button',\n  disabled: false,\n  small: false,\n  kind: 'primary'\n};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}