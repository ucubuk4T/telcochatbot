{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavIcon = function SideNavIcon(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      small = _ref.small;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__icon\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__icon--small\"), small), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  return React.createElement(\"div\", {\n    className: className\n  }, children);\n};\n\nSideNavIcon.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify whether the icon should be placed in a smaller bounding box\n   */\n  small: PropTypes.bool.isRequired\n};\nSideNavIcon.defaultProps = {\n  small: false\n};\nexport default SideNavIcon;","map":null,"metadata":{},"sourceType":"module"}