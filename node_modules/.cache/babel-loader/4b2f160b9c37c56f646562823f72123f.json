{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { settings } from 'carbon-components';\nimport { keys } from '../../tools/key';\nvar prefix = settings.prefix;\n\nvar OverflowMenuItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OverflowMenuItem, _React$Component);\n\n  function OverflowMenuItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OverflowMenuItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OverflowMenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"overflowMenuItem\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"setTabFocus\", function (evt) {\n      if (evt.which === keys.DOWN) {\n        _this.props.handleOverflowMenuItemFocus(_this.props.index + 1);\n      }\n\n      if (evt.which === keys.UP) {\n        _this.props.handleOverflowMenuItemFocus(_this.props.index - 1);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (evt) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          closeMenu = _this$props.closeMenu;\n      onClick(evt);\n\n      if (closeMenu) {\n        closeMenu();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(OverflowMenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _this2 = this;\n\n      var _this$props2 = this.props,\n          href = _this$props2.href,\n          className = _this$props2.className,\n          itemText = _this$props2.itemText,\n          hasDivider = _this$props2.hasDivider,\n          isDelete = _this$props2.isDelete,\n          disabled = _this$props2.disabled,\n          closeMenu = _this$props2.closeMenu,\n          onClick = _this$props2.onClick,\n          handleOverflowMenuItemFocus = _this$props2.handleOverflowMenuItemFocus,\n          _onKeyDown = _this$props2.onKeyDown,\n          primaryFocus = _this$props2.primaryFocus,\n          wrapperClassName = _this$props2.wrapperClassName,\n          requireTitle = _this$props2.requireTitle,\n          index = _this$props2.index,\n          other = _objectWithoutProperties(_this$props2, [\"href\", \"className\", \"itemText\", \"hasDivider\", \"isDelete\", \"disabled\", \"closeMenu\", \"onClick\", \"handleOverflowMenuItemFocus\", \"onKeyDown\", \"primaryFocus\", \"wrapperClassName\", \"requireTitle\", \"index\"]);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        process.env.NODE_ENV !== \"production\" ? warning(closeMenu, '`<OverflowMenuItem>` detected missing `closeMenu` prop. ' + '`closeMenu` is required to let `<OverflowMenu>` close the menu upon actions on `<OverflowMenuItem>`. ' + 'Please make sure `<OverflowMenuItem>` is a direct child of `<OverflowMenu>.') : void 0;\n      }\n\n      var overflowMenuBtnClasses = classNames(\"\".concat(prefix, \"--overflow-menu-options__btn\"), className);\n      var overflowMenuItemClasses = classNames(\"\".concat(prefix, \"--overflow-menu-options__option\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu--divider\"), hasDivider), _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu-options__option--danger\"), isDelete), _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu-options__option--disabled\"), disabled), _classNames), wrapperClassName);\n      var primaryFocusProp = primaryFocus ? {\n        'data-floating-menu-primary-focus': true\n      } : {};\n      var TagToUse = href ? 'a' : 'button';\n\n      var OverflowMenuItemContent = function () {\n        if (typeof itemText !== 'string') {\n          return itemText;\n        }\n\n        return React.createElement(\"div\", {\n          className: \"\".concat(prefix, \"--overflow-menu-options__option-content\")\n        }, itemText);\n      }();\n\n      return React.createElement(\"li\", {\n        className: overflowMenuItemClasses,\n        role: \"menuitem\"\n      }, React.createElement(TagToUse, _extends({}, other, primaryFocusProp, {\n        href: href,\n        className: overflowMenuBtnClasses,\n        disabled: disabled,\n        onClick: this.handleClick,\n        onKeyDown: function onKeyDown(evt) {\n          _this2.setTabFocus(evt);\n\n          _onKeyDown(evt);\n        },\n        ref: this.overflowMenuItem,\n        title: requireTitle ? itemText : null,\n        tabIndex: \"-1\",\n        index: index\n      }), OverflowMenuItemContent));\n    }\n  }]);\n\n  return OverflowMenuItem;\n}(React.Component);\n\n_defineProperty(OverflowMenuItem, \"propTypes\", {\n  /**\n   * The CSS class name to be placed on the button element\n   */\n  className: PropTypes.string,\n\n  /**\n   * The CSS class name to be placed on the wrapper list item element\n   */\n  wrapperClassName: PropTypes.string,\n\n  /**\n   * The text in the menu item.\n   */\n  itemText: PropTypes.node.isRequired,\n\n  /**\n   * If given, overflow item will render as a link with the given href\n   */\n  href: PropTypes.string,\n\n  /**\n   * `true` to make this menu item a divider.\n   */\n  hasDivider: PropTypes.bool,\n\n  /**\n   * `true` to make this menu item a \"danger button\".\n   */\n  isDelete: PropTypes.bool,\n\n  /**\n   * `true` to make this menu item disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * event handlers\n   */\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseUp: PropTypes.func,\n\n  /**\n   * A callback to tell the parent menu component that the menu should be closed.\n   */\n  closeMenu: PropTypes.func,\n\n  /**\n   * `true` if this menu item should get focus when the menu gets open.\n   */\n  primaryFocus: PropTypes.bool,\n\n  /**\n   * `true` if this menu item has long text and requires a browser tooltip\n   */\n  requireTitle: PropTypes.bool\n});\n\n_defineProperty(OverflowMenuItem, \"defaultProps\", {\n  hasDivider: false,\n  isDelete: false,\n  disabled: false,\n  itemText: 'Provide itemText',\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {}\n});\n\nexport { OverflowMenuItem as default };","map":null,"metadata":{},"sourceType":"module"}