{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport cx from 'classnames';\nimport React from 'react';\nimport ChevronRight16 from '@carbon/icons-react/lib/chevron--right/16';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableExpandHeader = function TableExpandHeader(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      headerClassName = _ref.className,\n      enableExpando = _ref.enableExpando,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      rest = _objectWithoutProperties(_ref, [\"ariaLabel\", \"className\", \"enableExpando\", \"isExpanded\", \"onExpand\", \"expandIconDescription\"]);\n\n  var className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return React.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue\n  }, rest), !enableExpando ? null : React.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })));\n};\n\nexport default TableExpandHeader;","map":null,"metadata":{},"sourceType":"module"}