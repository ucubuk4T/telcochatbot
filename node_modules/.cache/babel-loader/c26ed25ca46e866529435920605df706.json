{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar HeaderContainer = function HeaderContainer(_ref) {\n  var isSideNavExpanded = _ref.isSideNavExpanded,\n      Children = _ref.render;\n\n  var _useState = (0, _react.useState)(isSideNavExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSideNavExpandedState = _useState2[0],\n      setIsSideNavExpandedState = _useState2[1];\n\n  var handleHeaderMenuButtonClick = (0, _react.useCallback)(function () {\n    setIsSideNavExpandedState(!isSideNavExpandedState);\n  }, [isSideNavExpandedState, setIsSideNavExpandedState]);\n  return _react.default.createElement(Children, {\n    isSideNavExpanded: isSideNavExpandedState,\n    onClickSideNavExpand: handleHeaderMenuButtonClick\n  });\n};\n\nHeaderContainer.propTypes = {\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  isSideNavExpanded: _propTypes.default.bool\n};\nHeaderContainer.defaultProps = {\n  isSideNavExpanded: false\n};\nvar _default = HeaderContainer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}