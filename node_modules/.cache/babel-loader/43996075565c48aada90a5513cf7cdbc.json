{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(TextArea, _mixin);\n  /**\n   * Text Area.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element - The textarea element\n   */\n\n\n  function TextArea(_element, options) {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextArea).call(this, _element, options));\n\n    _this._handleInput = function (_ref) {\n      var element = _ref.element,\n          length = _ref.length;\n      element.querySelector(_this.options.selectorCharCounter).textContent = length;\n    };\n\n    _this.manage(on(_this.element, 'input', function (event) {\n      if (event.target.maxLength < 0) {\n        return;\n      }\n\n      _this._handleInput({\n        element: _element,\n        length: event.target.value.length\n      });\n    }));\n\n    return _this;\n  }\n  /**\n   * Updates the character counter\n   * @param {Object} obj - The elements that can change in the component\n   * @param {HTMLElement} obj.element - The textarea element\n   * @param {HTMLElement} obj.length - The length of the textarea value\n   */\n\n\n  _createClass(TextArea, null, [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     *\n     * If `options` is specified in the constructor,\n     * {@linkcode TextArea.create .create()},\n     * or {@linkcode TextArea.init .init()},\n     * properties in this object are overriden for the instance being\n     * created and how {@linkcode TextArea.init .init()} works.\n     * @property {string} selectorInit The CSS selector to find textarea UIs.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-text-area]',\n        selectorCharCounter: \".\".concat(prefix, \"--text-area--character-counter--length\")\n      };\n    }\n    /**\n     * The map associating DOM element and textarea UI instance.\n     * @type {WeakMap}\n     */\n\n  }]);\n\n  TextArea.components = new WeakMap();\n  return TextArea;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nexport { TextArea as default };","map":null,"metadata":{},"sourceType":"module"}