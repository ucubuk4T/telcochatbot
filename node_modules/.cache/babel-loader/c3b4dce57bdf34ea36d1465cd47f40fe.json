{"ast":null,"code":"var _triggerButtonPositio, _triggerButtonPositio2;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport ClickListener from '../../internal/ClickListener';\nimport FloatingMenu, { DIRECTION_TOP, DIRECTION_BOTTOM } from '../../internal/FloatingMenu';\nimport OptimizedResize from '../../internal/OptimizedResize';\nimport OverflowMenuVertical16 from '@carbon/icons-react/lib/overflow-menu--vertical/16';\nimport { keys, matches as keyCodeMatches } from '../../tools/key';\nimport mergeRefs from '../../tools/mergeRefs';\nvar prefix = settings.prefix;\n\nvar on = function on(element) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  element.addEventListener.apply(element, args);\n  return {\n    release: function release() {\n      element.removeEventListener.apply(element, args);\n      return null;\n    }\n  };\n};\n/**\n * The CSS property names of the arrow keyed by the floating menu direction.\n * @type {Object<string, string>}\n */\n\n\nvar triggerButtonPositionProps = (_triggerButtonPositio = {}, _defineProperty(_triggerButtonPositio, DIRECTION_TOP, 'bottom'), _defineProperty(_triggerButtonPositio, DIRECTION_BOTTOM, 'top'), _triggerButtonPositio);\n/**\n * Determines how the position of arrow should affect the floating menu position.\n * @type {Object<string, number>}\n */\n\nvar triggerButtonPositionFactors = (_triggerButtonPositio2 = {}, _defineProperty(_triggerButtonPositio2, DIRECTION_TOP, -2), _defineProperty(_triggerButtonPositio2, DIRECTION_BOTTOM, -1), _triggerButtonPositio2);\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} direction The floating menu direction.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\nexport var getMenuOffset = function getMenuOffset(menuBody, direction, trigger, flip) {\n  var triggerButtonPositionProp = triggerButtonPositionProps[direction];\n  var triggerButtonPositionFactor = triggerButtonPositionFactors[direction];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !(triggerButtonPositionProp && triggerButtonPositionFactor) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[OverflowMenu] wrong floating menu direction: `%s`', direction) : invariant(false) : void 0;\n  }\n\n  var menuWidth = menuBody.offsetWidth,\n      menuHeight = menuBody.offsetHeight;\n\n  switch (triggerButtonPositionProp) {\n    case 'top':\n    case 'bottom':\n      {\n        // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n        var triggerWidth = !trigger ? 0 : trigger.offsetWidth;\n        return {\n          left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),\n          top: 0\n        };\n      }\n\n    case 'left':\n    case 'right':\n      {\n        // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n        var triggerHeight = !trigger ? 0 : trigger.offsetHeight;\n        return {\n          left: 0,\n          top: (!flip ? 1 : -1) * (menuHeight / 2 - triggerHeight / 2)\n        };\n      }\n\n    default:\n      break;\n  }\n};\n\nvar OverflowMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OverflowMenu, _Component);\n\n  function OverflowMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OverflowMenu);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OverflowMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_hFocusIn\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_hBlurTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getPrimaryFocusableElement\", function () {\n      if (_this.menuEl) {\n        var primaryFocusPropEl = _this.menuEl.querySelector('[data-floating-menu-primary-focus]');\n\n        if (primaryFocusPropEl) {\n          return primaryFocusPropEl;\n        }\n      }\n\n      var firstItem = _this.overflowMenuItem0;\n\n      if (firstItem && firstItem.overflowMenuItem && firstItem.overflowMenuItem.current) {\n        return firstItem.overflowMenuItem.current;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMenuPosition\", function () {\n      if (_this.menuEl) {\n        var menuPosition = _this.menuEl.getBoundingClientRect();\n\n        _this.setState({\n          menuPosition: menuPosition\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (evt) {\n      if (!_this._menuBody || !_this._menuBody.contains(evt.target)) {\n        _this.setState({\n          open: !_this.state.open\n        });\n\n        _this.props.onClick(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (evt) {\n      if (keyCodeMatches(evt, [keys.DOWN])) {\n        _this.setState({\n          open: !_this.state.open\n        });\n\n        _this.props.onClick(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (evt) {\n      // only respond to key events when the menu is closed, so that menu items still respond to key events\n      if (!_this.state.open) {\n        if (keyCodeMatches(evt, [keys.ENTER, keys.SPACE])) {\n          _this.setState({\n            open: true\n          });\n        }\n      } // Close the overflow menu on escape\n\n\n      if (keyCodeMatches(evt, [keys.ESC])) {\n        _this.closeMenu(); // Stop the esc keypress from bubbling out and closing something it shouldn't\n\n\n        evt.stopPropagation();\n        evt.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (evt) {\n      if (!_this._menuBody || !_this._menuBody.contains(evt.target)) {\n        _this.closeMenu();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeMenu\", function () {\n      var wasOpen = _this.state.open;\n\n      _this.setState({\n        open: false\n      }, function () {\n        if (wasOpen) {\n          _this.focusMenuEl();\n        }\n\n        _this.props.onClose();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindMenuEl\", function (menuEl) {\n      _this.menuEl = menuEl;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusMenuEl\", function () {\n      if (_this.menuEl) {\n        _this.menuEl.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOverflowMenuItemFocus\", function (index) {\n      var i = function () {\n        switch (index) {\n          case -1:\n            return React.Children.count(_this.props.children) - 1;\n\n          case React.Children.count(_this.props.children):\n            return 0;\n\n          default:\n            return index;\n        }\n      }();\n\n      var _ref = _this[\"overflowMenuItem\".concat(i)] || React.Children.toArray(_this.props.children)[i],\n          overflowMenuItem = _ref.overflowMenuItem;\n\n      if (overflowMenuItem && overflowMenuItem.current) {\n        overflowMenuItem.current.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bindMenuBody\", function (menuBody) {\n      if (!menuBody) {\n        _this._menuBody = menuBody;\n      }\n\n      if (!menuBody && _this._hFocusIn) {\n        _this._hFocusIn = _this._hFocusIn.release();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePlace\", function (menuBody) {\n      if (menuBody) {\n        _this._menuBody = menuBody;\n        (menuBody.querySelector('[data-floating-menu-primary-focus]') || menuBody).focus();\n        var hasFocusin = 'onfocusin' in window;\n        var focusinEventName = hasFocusin ? 'focusin' : 'focus';\n        _this._hFocusIn = on(menuBody.ownerDocument, focusinEventName, function (event) {\n          var target = event.target;\n\n          if (!menuBody.contains(target) && _this.menuEl && !target.matches(\".\".concat(prefix, \"--overflow-menu,.\").concat(prefix, \"--overflow-menu-options\"))) {\n            _this.closeMenu();\n          }\n        }, !hasFocusin);\n\n        _this.props.onOpen();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getTarget\", function () {\n      return _this.menuEl && _this.menuEl.closest('[data-floating-menu-container]') || document.body;\n    });\n\n    return _this;\n  }\n\n  _createClass(OverflowMenu, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this2 = this;\n\n      if (nextState.open && !this.state.open) {\n        requestAnimationFrame(function () {\n          _this2.getMenuPosition();\n        });\n        return false; // Let `.getMenuPosition()` cause render\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      requestAnimationFrame(function () {\n        _this3.getMenuPosition();\n      });\n      this.hResize = OptimizedResize.add(function () {\n        _this3.getMenuPosition();\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var onClose = this.props.onClose;\n\n      if (!this.state.open) {\n        onClose();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this._hBlurTimeout === 'number') {\n        clearTimeout(this._hBlurTimeout);\n        this._hBlurTimeout = undefined;\n      }\n\n      this.hResize.release();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames2,\n          _this4 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          tabIndex = _this$props.tabIndex,\n          ariaLabel = _this$props.ariaLabel,\n          children = _this$props.children,\n          iconDescription = _this$props.iconDescription,\n          direction = _this$props.direction,\n          flipped = _this$props.flipped,\n          menuOffset = _this$props.menuOffset,\n          menuOffsetFlip = _this$props.menuOffsetFlip,\n          iconClass = _this$props.iconClass,\n          onClick = _this$props.onClick,\n          onOpen = _this$props.onOpen,\n          IconElement = _this$props.renderIcon,\n          ref = _this$props.innerRef,\n          menuOptionsClass = _this$props.menuOptionsClass,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"tabIndex\", \"ariaLabel\", \"children\", \"iconDescription\", \"direction\", \"flipped\", \"menuOffset\", \"menuOffsetFlip\", \"iconClass\", \"onClick\", \"onOpen\", \"renderIcon\", \"innerRef\", \"menuOptionsClass\"]);\n\n      var open = this.state.open;\n      var overflowMenuClasses = classNames(this.props.className, \"\".concat(prefix, \"--overflow-menu\"), _defineProperty({}, \"\".concat(prefix, \"--overflow-menu--open\"), open));\n      var overflowMenuOptionsClasses = classNames(menuOptionsClass, \"\".concat(prefix, \"--overflow-menu-options\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu--flip\"), this.props.flipped), _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu-options--open\"), open), _classNames2));\n      var overflowMenuIconClasses = classNames(\"\".concat(prefix, \"--overflow-menu__icon\"), iconClass);\n      var childrenWithProps = React.Children.toArray(children).map(function (child, index) {\n        return React.cloneElement(child, {\n          closeMenu: _this4.closeMenu,\n          handleOverflowMenuItemFocus: _this4.handleOverflowMenuItemFocus,\n          ref: function ref(e) {\n            _this4[\"overflowMenuItem\".concat(index)] = e;\n          },\n          index: index\n        });\n      });\n      var menuBody = React.createElement(\"ul\", {\n        className: overflowMenuOptionsClasses,\n        tabIndex: \"-1\",\n        role: \"menu\"\n      }, childrenWithProps);\n      var wrappedMenuBody = React.createElement(\"div\", {\n        role: \"menuitem\"\n      }, React.createElement(FloatingMenu, {\n        menuPosition: this.state.menuPosition,\n        menuDirection: direction,\n        menuOffset: flipped ? menuOffsetFlip : menuOffset,\n        menuRef: this._bindMenuBody,\n        menuEl: this.menuEl,\n        flipped: this.props.flipped,\n        target: this._getTarget,\n        onPlace: this._handlePlace\n      }, React.cloneElement(menuBody, {\n        'data-floating-menu-direction': direction\n      })));\n      var iconProps = {\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        className: overflowMenuIconClasses,\n        'aria-label': iconDescription,\n        focusable: 'false' // Prevent `<svg>` in trigger icon from getting focus for IE11\n\n      };\n      return React.createElement(ClickListener, {\n        onClickOutside: this.handleClickOutside\n      }, React.createElement(\"div\", _extends({}, other, {\n        role: \"menu\",\n        \"aria-haspopup\": true,\n        \"aria-expanded\": this.state.open,\n        className: overflowMenuClasses,\n        onKeyDown: this.handleKeyPress,\n        onBlur: this.handleBlur,\n        onClick: this.handleClick,\n        \"aria-label\": ariaLabel,\n        id: id,\n        tabIndex: tabIndex,\n        ref: mergeRefs(ref, this.bindMenuEl)\n      }), React.createElement(IconElement, iconProps, iconDescription && React.createElement(\"title\", null, iconDescription)), open && wrappedMenuBody));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var open = _ref2.open;\n      var prevOpen = state.prevOpen;\n      return prevOpen === open ? null : {\n        open: open,\n        prevOpen: open\n      };\n    }\n  }]);\n\n  return OverflowMenu;\n}(Component);\n\n_defineProperty(OverflowMenu, \"propTypes\", {\n  /**\n   * `true` if the menu should be open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The menu direction.\n   */\n  direction: PropTypes.oneOf([DIRECTION_TOP, DIRECTION_BOTTOM]),\n\n  /**\n   * `true` if the menu alignment should be flipped.\n   */\n  flipped: PropTypes.bool,\n\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The element ID.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The ARIA label.\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * The event handler for the `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The event handler for the `focus` event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The event handler for the `keydown` event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The icon description.\n   */\n  iconDescription: PropTypes.string.isRequired,\n\n  /**\n   * The adjustment in position applied to the floating menu.\n   */\n  menuOffset: PropTypes.oneOfType([PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }), PropTypes.func]),\n\n  /**\n   * The adjustment in position applied to the floating menu.\n   */\n  menuOffsetFlip: PropTypes.oneOfType([PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }), PropTypes.func]),\n\n  /**\n   * The CSS class for the icon.\n   */\n  iconClass: PropTypes.string,\n\n  /**\n   * Function called to override icon rendering.\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Function called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The class to apply to the menu options\n   */\n  menuOptionsClass: PropTypes.string,\n\n  /**\n   * Function called when menu is closed\n   */\n  onOpen: PropTypes.func\n});\n\n_defineProperty(OverflowMenu, \"defaultProps\", {\n  ariaLabel: 'list of options',\n  iconDescription: 'open and close list of options',\n  open: false,\n  direction: DIRECTION_BOTTOM,\n  flipped: false,\n  renderIcon: OverflowMenuVertical16,\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {},\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  tabIndex: 0,\n  menuOffset: getMenuOffset,\n  menuOffsetFlip: getMenuOffset\n});\n\nexport default (function () {\n  var forwardRef = function forwardRef(props, ref) {\n    return React.createElement(OverflowMenu, _extends({}, props, {\n      innerRef: ref\n    }));\n  };\n\n  forwardRef.displayName = 'OverflowMenu';\n  return React.forwardRef(forwardRef);\n})();","map":null,"metadata":{},"sourceType":"module"}