{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isForwardRef } from 'react-is';\nimport debounce from 'lodash.debounce';\nimport classNames from 'classnames';\nimport Information from '@carbon/icons-react/lib/information/16';\nimport { settings } from 'carbon-components';\nimport FloatingMenu, { DIRECTION_LEFT, DIRECTION_TOP, DIRECTION_RIGHT, DIRECTION_BOTTOM } from '../../internal/FloatingMenu';\nimport ClickListener from '../../internal/ClickListener';\nimport mergeRefs from '../../tools/mergeRefs';\nimport { keys, keyCodes, matches as keyDownMatch } from '../../tools/key';\nimport isRequiredOneOf from '../../prop-types/isRequiredOneOf';\nvar prefix = settings.prefix;\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} menuDirection Where the floating menu menu should be placed relative to the trigger button.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\nvar getMenuOffset = function getMenuOffset(menuBody, menuDirection) {\n  var _DIRECTION_LEFT$DIREC, _DIRECTION_LEFT$DIREC2;\n\n  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');\n  var arrowPositionProp = (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, 'right'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, 'bottom'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC)[menuDirection];\n  var menuPositionAdjustmentProp = (_DIRECTION_LEFT$DIREC2 = {}, _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_LEFT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_TOP, 'top'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC2)[menuDirection];\n  var values = [arrowPositionProp, 'border-bottom-width'].reduce(function (o, name) {\n    return _objectSpread({}, o, _defineProperty({}, name, Number((/^([\\d-]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));\n  }, {});\n  values[arrowPositionProp] = values[arrowPositionProp] || -6; // IE, etc.\n\n  if (Object.keys(values).every(function (name) {\n    return !isNaN(values[name]);\n  })) {\n    var arrowPosition = values[arrowPositionProp],\n        borderBottomWidth = values['border-bottom-width'];\n    return _defineProperty({\n      left: 0,\n      top: 0\n    }, menuPositionAdjustmentProp, Math.sqrt(Math.pow(borderBottomWidth, 2) * 2) - arrowPosition);\n  }\n};\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tooltip, _Component);\n\n  function Tooltip() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_tooltipEl\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getTriggerPosition\", function () {\n      if (_this.triggerEl) {\n        var triggerPosition = _this.triggerEl.getBoundingClientRect();\n\n        _this.setState({\n          triggerPosition: triggerPosition\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleHover\", function (state, relatedTarget) {\n      if (state === 'over') {\n        _this.getTriggerPosition();\n\n        _this.setState({\n          open: true\n        });\n      } else {\n        // Note: SVGElement in IE11 does not have `.contains()`\n        var shouldPreventClose = relatedTarget && (_this.triggerEl && _this.triggerEl.contains && _this.triggerEl.contains(relatedTarget) || _this._tooltipEl && _this._tooltipEl.contains(relatedTarget));\n\n        if (!shouldPreventClose) {\n          _this.setState({\n            open: false\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debouncedHandleHover\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_getTarget\", function () {\n      return _this.triggerEl && _this.triggerEl.closest('[data-floating-menu-container]') || document.body;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouse\", function (evt) {\n      if (evt.type === 'click') {\n        evt.stopPropagation();\n        var shouldOpen = !_this.state.open;\n\n        if (shouldOpen) {\n          _this.getTriggerPosition();\n        }\n\n        _this.setState({\n          open: shouldOpen\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (evt) {\n      var shouldPreventClose = evt && evt.target && _this._tooltipEl && _this._tooltipEl.contains(evt.target);\n\n      if (!shouldPreventClose) {\n        _this.setState({\n          open: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (event) {\n      if (keyDownMatch(event, [keys.ESC, keyCodes.ESC, keyCodes.IEESC])) {\n        event.stopPropagation();\n\n        _this.setState({\n          open: false\n        });\n      }\n\n      if (keyDownMatch(event, [keys.ENTER, keyCodes.ENTER, keys.SPACE, keyCodes.SPACE])) {\n        event.stopPropagation();\n\n        _this.setState({\n          open: !_this.state.open\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEscKeyPress\", function (event) {\n      var open = _this.state.open;\n\n      if (open && keyDownMatch(event, [keys.ESC, keyCodes.ESC, keyCodes.IEESC])) {\n        return _this.setState({\n          open: false\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this._debouncedHandleHover) {\n        this._debouncedHandleHover = debounce(this._handleHover, 200);\n      }\n\n      requestAnimationFrame(function () {\n        _this2.getTriggerPosition();\n      });\n      document.addEventListener('keydown', this.handleEscKeyPress, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debouncedHandleHover) {\n        this._debouncedHandleHover.cancel();\n\n        this._debouncedHandleHover = null;\n      }\n\n      document.removeEventListener('keydown', this.handleEscKeyPress, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          _this$props$triggerId = _this$props.triggerId,\n          triggerId = _this$props$triggerId === void 0 ? this.triggerId = this.triggerId || \"__carbon-tooltip-trigger_\".concat(Math.random().toString(36).substr(2)) : _this$props$triggerId,\n          _this$props$tooltipId = _this$props.tooltipId,\n          tooltipId = _this$props$tooltipId === void 0 ? this.tooltipId = this.tooltipId || \"__carbon-tooltip_\".concat(Math.random().toString(36).substr(2)) : _this$props$tooltipId,\n          children = _this$props.children,\n          className = _this$props.className,\n          triggerClassName = _this$props.triggerClassName,\n          direction = _this$props.direction,\n          triggerText = _this$props.triggerText,\n          showIcon = _this$props.showIcon,\n          iconName = _this$props.iconName,\n          iconDescription = _this$props.iconDescription,\n          IconCustomElement = _this$props.renderIcon,\n          menuOffset = _this$props.menuOffset,\n          _this$props$tabIndex = _this$props.tabIndex,\n          tabIndex = _this$props$tabIndex === void 0 ? 0 : _this$props$tabIndex,\n          ref = _this$props.innerRef,\n          other = _objectWithoutProperties(_this$props, [\"triggerId\", \"tooltipId\", \"children\", \"className\", \"triggerClassName\", \"direction\", \"triggerText\", \"showIcon\", \"iconName\", \"iconDescription\", \"renderIcon\", \"menuOffset\", \"tabIndex\", \"innerRef\"]);\n\n      var open = this.state.open;\n      var tooltipClasses = classNames(\"\".concat(prefix, \"--tooltip\"), _defineProperty({}, \"\".concat(prefix, \"--tooltip--shown\"), open), className);\n      var triggerClasses = classNames(\"\".concat(prefix, \"--tooltip__label\"), triggerClassName);\n      var refProp = mergeRefs(ref, function (node) {\n        _this3.triggerEl = node;\n      });\n      var iconProperties = {\n        name: iconName,\n        role: null,\n        description: null\n      };\n\n      var properties = _objectSpread({\n        role: 'button',\n        tabIndex: tabIndex,\n        onClick: this.handleMouse,\n        onKeyDown: this.handleKeyPress,\n        onMouseOver: this.handleMouse,\n        onMouseOut: this.handleMouse,\n        onFocus: this.handleMouse,\n        onBlur: this.handleMouse,\n        'aria-haspopup': 'true',\n        'aria-expanded': open\n      }, triggerText ? {\n        'aria-describedby': triggerId\n      } : {\n        'aria-label': iconDescription\n      });\n\n      return React.createElement(React.Fragment, null, React.createElement(ClickListener, {\n        onClickOutside: this.handleClickOutside\n      }, showIcon ? React.createElement(\"div\", {\n        id: triggerId,\n        className: triggerClasses\n      }, triggerText, React.createElement(\"div\", _extends({\n        className: \"\".concat(prefix, \"--tooltip__trigger\")\n      }, properties), React.createElement(IconCustomElement, _extends({\n        ref: refProp\n      }, iconProperties)))) : React.createElement(\"div\", _extends({\n        id: triggerId,\n        className: triggerClasses,\n        ref: refProp\n      }, properties), triggerText)), open && React.createElement(FloatingMenu, {\n        target: this._getTarget,\n        menuPosition: this.state.triggerPosition,\n        menuDirection: direction,\n        menuOffset: menuOffset,\n        menuRef: function menuRef(node) {\n          _this3._tooltipEl = node;\n        }\n      }, React.createElement(\"div\", _extends({\n        id: tooltipId,\n        className: tooltipClasses\n      }, other, {\n        \"data-floating-menu-direction\": direction,\n        onMouseOver: this.handleMouse,\n        onMouseOut: this.handleMouse,\n        onFocus: this.handleMouse,\n        onBlur: this.handleMouse,\n        onContextMenu: this.handleMouse,\n        role: \"tooltip\"\n      }), React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--tooltip__caret\")\n      }), children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var open = _ref2.open;\n      /**\n       * so that tooltip can be controlled programmatically through this `open` prop\n       */\n\n      var prevOpen = state.prevOpen;\n      return prevOpen === open ? null : {\n        open: open,\n        prevOpen: open\n      };\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\n_defineProperty(Tooltip, \"propTypes\", _objectSpread({\n  /**\n   * The ID of the trigger button.\n   */\n  triggerId: PropTypes.string,\n\n  /**\n   * The ID of the tooltip content.\n   */\n  tooltipId: PropTypes.string,\n\n  /**\n   * Open/closed state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Contents to put into the tooltip.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names of the tooltip.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The CSS class names of the trigger UI.\n   */\n  triggerClassName: PropTypes.string,\n\n  /**\n   * Where to put the tooltip, relative to the trigger UI.\n   */\n  direction: PropTypes.oneOf(['bottom', 'top', 'left', 'right']),\n\n  /**\n   * The adjustment of the tooltip position.\n   */\n  menuOffset: PropTypes.oneOfType([PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }), PropTypes.func]),\n\n  /**\n   * The callback function to optionally render the icon element.\n   * It should be a component with React.forwardRef().\n   */\n  renderIcon: function renderIcon(props, propName, componentName) {\n    if (props[propName] == undefined) {\n      return;\n    }\n\n    var RefForwardingComponent = props[propName];\n    if (!isForwardRef(React.createElement(RefForwardingComponent, null))) return new Error(\"Invalid value of prop '\".concat(propName, \"' supplied to '\").concat(componentName, \"',\\n                          it should be created/wrapped with React.forwardRef() to have a ref and access the proper\\n                          DOM node of the element to calculate its position in the viewport.\"));\n  },\n\n  /**\n   * `true` to show the default tooltip icon.\n   */\n  showIcon: PropTypes.bool,\n\n  /**\n   * The name of the default tooltip icon.\n   */\n  iconName: PropTypes.string\n}, isRequiredOneOf({\n  /**\n   * The content to put into the trigger UI, except the (default) tooltip icon.\n   */\n  triggerText: PropTypes.node,\n\n  /**\n   * The description of the default tooltip icon, to be put in its SVG 'aria-label' and 'alt' .\n   */\n  iconDescription: PropTypes.string\n}), {\n  /**\n   * Optional prop to specify the tabIndex of the Tooltip\n   */\n  tabIndex: PropTypes.number\n}));\n\n_defineProperty(Tooltip, \"defaultProps\", {\n  open: false,\n  direction: DIRECTION_BOTTOM,\n  renderIcon: Information,\n  showIcon: true,\n  triggerText: null,\n  menuOffset: getMenuOffset\n});\n\nexport default (function () {\n  var forwardRef = function forwardRef(props, ref) {\n    return React.createElement(Tooltip, _extends({}, props, {\n      innerRef: ref\n    }));\n  };\n\n  forwardRef.displayName = 'Tooltip';\n  return React.forwardRef(forwardRef);\n})();","map":null,"metadata":{},"sourceType":"module"}